---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Pagination from '../../../components/Pagination.astro';
import PostPreview from '../../../components/PostPreview.astro';
import ProjectPreview from '../../../components/ProjectPreview.astro';
import { sortItemsByDateDesc, getAllTags, getPostsByTag } from '../../../utils/data-utils';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    // Fetch blog and project collections
    const blogPosts = await getCollection('blog');
    const projectPosts = await getCollection('projects');
    const allItems = [...blogPosts, ...projectPosts];

    // Extract unique tags
    const tags = getAllTags(allItems);

    // Generate paths for each tag with pagination
    return tags.flatMap((tag) => {
        const filteredItems = getPostsByTag(allItems, tag.slug);
        return paginate(filteredItems, {
            params: { slug: tag.slug },
            pageSize: 4 // Change this value to control items per page
        });
    });
}

type Props = { page: Page<CollectionEntry<'blog' | 'projects'>> };

const { page } = Astro.props;

// Get current items and tag
const allItems = page.data;
const params = Astro.params;
const currentTag = params.slug;
---

<BaseLayout title={`Content Tagged ${currentTag}`} description={`Explore all content tagged with "${currentTag}".`}>
    <h1 class="text-3xl font-serif italic mb-8">Content Tagged "{currentTag}"</h1>

    <!-- Display Projects -->
    {
        allItems.filter((item) => item.collection === 'projects').length > 0 && (
            <>
                <h2 class="text-2xl font-medium mb-4">Projects</h2>
                {allItems
                    .filter((item) => item.collection === 'projects')
                    .map((project) => (
                        <ProjectPreview project={project} class="mb-8" />
                    ))}
            </>
        )
    }

    <!-- Display Blog Posts -->
    {
        allItems.filter((item) => item.collection === 'blog').length > 0 && (
            <>
                <h2 class="text-2xl font-medium mt-8 mb-4">Blog Posts</h2>
                {allItems
                    .filter((item) => item.collection === 'blog')
                    .map((post) => (
                        <PostPreview post={post} class="mb-8" />
                    ))}
            </>
        )
    }

    <!-- Pagination -->
    <Pagination page={page} class="my-16 sm:my-24" />
</BaseLayout>
